/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.talool.api.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class SocialNetworkDetail_t implements org.apache.thrift.TBase<SocialNetworkDetail_t, SocialNetworkDetail_t._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SocialNetworkDetail_t");

  private static final org.apache.thrift.protocol.TField SOCAL_NETWORK_FIELD_DESC = new org.apache.thrift.protocol.TField("socalNetwork", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField WEBSITE_FIELD_DESC = new org.apache.thrift.protocol.TField("website", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField API_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("apiUrl", org.apache.thrift.protocol.TType.STRING, (short)4);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new SocialNetworkDetail_tStandardSchemeFactory());
    schemes.put(TupleScheme.class, new SocialNetworkDetail_tTupleSchemeFactory());
  }

  /**
   * 
   * @see SocialNetwork_t
   */
  public SocialNetwork_t socalNetwork; // required
  public String name; // required
  public String website; // required
  public String apiUrl; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see SocialNetwork_t
     */
    SOCAL_NETWORK((short)1, "socalNetwork"),
    NAME((short)2, "name"),
    WEBSITE((short)3, "website"),
    API_URL((short)4, "apiUrl");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SOCAL_NETWORK
          return SOCAL_NETWORK;
        case 2: // NAME
          return NAME;
        case 3: // WEBSITE
          return WEBSITE;
        case 4: // API_URL
          return API_URL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private _Fields optionals[] = {_Fields.API_URL};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SOCAL_NETWORK, new org.apache.thrift.meta_data.FieldMetaData("socalNetwork", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SocialNetwork_t.class)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WEBSITE, new org.apache.thrift.meta_data.FieldMetaData("website", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.API_URL, new org.apache.thrift.meta_data.FieldMetaData("apiUrl", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SocialNetworkDetail_t.class, metaDataMap);
  }

  public SocialNetworkDetail_t() {
  }

  public SocialNetworkDetail_t(
    SocialNetwork_t socalNetwork,
    String name,
    String website)
  {
    this();
    this.socalNetwork = socalNetwork;
    this.name = name;
    this.website = website;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SocialNetworkDetail_t(SocialNetworkDetail_t other) {
    if (other.isSetSocalNetwork()) {
      this.socalNetwork = other.socalNetwork;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetWebsite()) {
      this.website = other.website;
    }
    if (other.isSetApiUrl()) {
      this.apiUrl = other.apiUrl;
    }
  }

  public SocialNetworkDetail_t deepCopy() {
    return new SocialNetworkDetail_t(this);
  }

  public void clear() {
    this.socalNetwork = null;
    this.name = null;
    this.website = null;
    this.apiUrl = null;
  }

  /**
   * 
   * @see SocialNetwork_t
   */
  public SocialNetwork_t getSocalNetwork() {
    return this.socalNetwork;
  }

  /**
   * 
   * @see SocialNetwork_t
   */
  public SocialNetworkDetail_t setSocalNetwork(SocialNetwork_t socalNetwork) {
    this.socalNetwork = socalNetwork;
    return this;
  }

  public void unsetSocalNetwork() {
    this.socalNetwork = null;
  }

  /** Returns true if field socalNetwork is set (has been assigned a value) and false otherwise */
  public boolean isSetSocalNetwork() {
    return this.socalNetwork != null;
  }

  public void setSocalNetworkIsSet(boolean value) {
    if (!value) {
      this.socalNetwork = null;
    }
  }

  public String getName() {
    return this.name;
  }

  public SocialNetworkDetail_t setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public String getWebsite() {
    return this.website;
  }

  public SocialNetworkDetail_t setWebsite(String website) {
    this.website = website;
    return this;
  }

  public void unsetWebsite() {
    this.website = null;
  }

  /** Returns true if field website is set (has been assigned a value) and false otherwise */
  public boolean isSetWebsite() {
    return this.website != null;
  }

  public void setWebsiteIsSet(boolean value) {
    if (!value) {
      this.website = null;
    }
  }

  public String getApiUrl() {
    return this.apiUrl;
  }

  public SocialNetworkDetail_t setApiUrl(String apiUrl) {
    this.apiUrl = apiUrl;
    return this;
  }

  public void unsetApiUrl() {
    this.apiUrl = null;
  }

  /** Returns true if field apiUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetApiUrl() {
    return this.apiUrl != null;
  }

  public void setApiUrlIsSet(boolean value) {
    if (!value) {
      this.apiUrl = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case SOCAL_NETWORK:
      if (value == null) {
        unsetSocalNetwork();
      } else {
        setSocalNetwork((SocialNetwork_t)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case WEBSITE:
      if (value == null) {
        unsetWebsite();
      } else {
        setWebsite((String)value);
      }
      break;

    case API_URL:
      if (value == null) {
        unsetApiUrl();
      } else {
        setApiUrl((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case SOCAL_NETWORK:
      return getSocalNetwork();

    case NAME:
      return getName();

    case WEBSITE:
      return getWebsite();

    case API_URL:
      return getApiUrl();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case SOCAL_NETWORK:
      return isSetSocalNetwork();
    case NAME:
      return isSetName();
    case WEBSITE:
      return isSetWebsite();
    case API_URL:
      return isSetApiUrl();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SocialNetworkDetail_t)
      return this.equals((SocialNetworkDetail_t)that);
    return false;
  }

  public boolean equals(SocialNetworkDetail_t that) {
    if (that == null)
      return false;

    boolean this_present_socalNetwork = true && this.isSetSocalNetwork();
    boolean that_present_socalNetwork = true && that.isSetSocalNetwork();
    if (this_present_socalNetwork || that_present_socalNetwork) {
      if (!(this_present_socalNetwork && that_present_socalNetwork))
        return false;
      if (!this.socalNetwork.equals(that.socalNetwork))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_website = true && this.isSetWebsite();
    boolean that_present_website = true && that.isSetWebsite();
    if (this_present_website || that_present_website) {
      if (!(this_present_website && that_present_website))
        return false;
      if (!this.website.equals(that.website))
        return false;
    }

    boolean this_present_apiUrl = true && this.isSetApiUrl();
    boolean that_present_apiUrl = true && that.isSetApiUrl();
    if (this_present_apiUrl || that_present_apiUrl) {
      if (!(this_present_apiUrl && that_present_apiUrl))
        return false;
      if (!this.apiUrl.equals(that.apiUrl))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(SocialNetworkDetail_t other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    SocialNetworkDetail_t typedOther = (SocialNetworkDetail_t)other;

    lastComparison = Boolean.valueOf(isSetSocalNetwork()).compareTo(typedOther.isSetSocalNetwork());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSocalNetwork()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.socalNetwork, typedOther.socalNetwork);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(typedOther.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, typedOther.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWebsite()).compareTo(typedOther.isSetWebsite());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWebsite()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.website, typedOther.website);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApiUrl()).compareTo(typedOther.isSetApiUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApiUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.apiUrl, typedOther.apiUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SocialNetworkDetail_t(");
    boolean first = true;

    sb.append("socalNetwork:");
    if (this.socalNetwork == null) {
      sb.append("null");
    } else {
      sb.append(this.socalNetwork);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("website:");
    if (this.website == null) {
      sb.append("null");
    } else {
      sb.append(this.website);
    }
    first = false;
    if (isSetApiUrl()) {
      if (!first) sb.append(", ");
      sb.append("apiUrl:");
      if (this.apiUrl == null) {
        sb.append("null");
      } else {
        sb.append(this.apiUrl);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (socalNetwork == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'socalNetwork' was not present! Struct: " + toString());
    }
    if (name == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'name' was not present! Struct: " + toString());
    }
    if (website == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'website' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te.getMessage());
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te.getMessage());
    }
  }

  private static class SocialNetworkDetail_tStandardSchemeFactory implements SchemeFactory {
    public SocialNetworkDetail_tStandardScheme getScheme() {
      return new SocialNetworkDetail_tStandardScheme();
    }
  }

  private static class SocialNetworkDetail_tStandardScheme extends StandardScheme<SocialNetworkDetail_t> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SocialNetworkDetail_t struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SOCAL_NETWORK
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.socalNetwork = SocialNetwork_t.findByValue(iprot.readI32());
              struct.setSocalNetworkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // WEBSITE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.website = iprot.readString();
              struct.setWebsiteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // API_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.apiUrl = iprot.readString();
              struct.setApiUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SocialNetworkDetail_t struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.socalNetwork != null) {
        oprot.writeFieldBegin(SOCAL_NETWORK_FIELD_DESC);
        oprot.writeI32(struct.socalNetwork.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.website != null) {
        oprot.writeFieldBegin(WEBSITE_FIELD_DESC);
        oprot.writeString(struct.website);
        oprot.writeFieldEnd();
      }
      if (struct.apiUrl != null) {
        if (struct.isSetApiUrl()) {
          oprot.writeFieldBegin(API_URL_FIELD_DESC);
          oprot.writeString(struct.apiUrl);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SocialNetworkDetail_tTupleSchemeFactory implements SchemeFactory {
    public SocialNetworkDetail_tTupleScheme getScheme() {
      return new SocialNetworkDetail_tTupleScheme();
    }
  }

  private static class SocialNetworkDetail_tTupleScheme extends TupleScheme<SocialNetworkDetail_t> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SocialNetworkDetail_t struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI32(struct.socalNetwork.getValue());
      oprot.writeString(struct.name);
      oprot.writeString(struct.website);
      BitSet optionals = new BitSet();
      if (struct.isSetApiUrl()) {
        optionals.set(0);
      }
      oprot.writeBitSet(optionals, 1);
      if (struct.isSetApiUrl()) {
        oprot.writeString(struct.apiUrl);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SocialNetworkDetail_t struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.socalNetwork = SocialNetwork_t.findByValue(iprot.readI32());
      struct.setSocalNetworkIsSet(true);
      struct.name = iprot.readString();
      struct.setNameIsSet(true);
      struct.website = iprot.readString();
      struct.setWebsiteIsSet(true);
      BitSet incoming = iprot.readBitSet(1);
      if (incoming.get(0)) {
        struct.apiUrl = iprot.readString();
        struct.setApiUrlIsSet(true);
      }
    }
  }

}

