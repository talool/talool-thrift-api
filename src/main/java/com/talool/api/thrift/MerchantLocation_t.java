/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.talool.api.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class MerchantLocation_t implements org.apache.thrift.TBase<MerchantLocation_t, MerchantLocation_t._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MerchantLocation_t");

  private static final org.apache.thrift.protocol.TField LOCATION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("locationId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField WEBSITE_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("websiteUrl", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField LOGO_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("logoUrl", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField MERCHANT_IMAGE_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantImageUrl", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField LOCATION_FIELD_DESC = new org.apache.thrift.protocol.TField("location", org.apache.thrift.protocol.TType.STRUCT, (short)8);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRUCT, (short)9);
  private static final org.apache.thrift.protocol.TField DISTANCE_IN_METERS_FIELD_DESC = new org.apache.thrift.protocol.TField("distanceInMeters", org.apache.thrift.protocol.TType.DOUBLE, (short)10);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new MerchantLocation_tStandardSchemeFactory());
    schemes.put(TupleScheme.class, new MerchantLocation_tTupleSchemeFactory());
  }

  public long locationId; // optional
  public String name; // optional
  public String email; // optional
  public String websiteUrl; // optional
  public String logoUrl; // optional
  public String merchantImageUrl; // optional
  public String phone; // optional
  public Location_t location; // optional
  public Address_t address; // required
  public double distanceInMeters; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    LOCATION_ID((short)1, "locationId"),
    NAME((short)2, "name"),
    EMAIL((short)3, "email"),
    WEBSITE_URL((short)4, "websiteUrl"),
    LOGO_URL((short)5, "logoUrl"),
    MERCHANT_IMAGE_URL((short)6, "merchantImageUrl"),
    PHONE((short)7, "phone"),
    LOCATION((short)8, "location"),
    ADDRESS((short)9, "address"),
    DISTANCE_IN_METERS((short)10, "distanceInMeters");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // LOCATION_ID
          return LOCATION_ID;
        case 2: // NAME
          return NAME;
        case 3: // EMAIL
          return EMAIL;
        case 4: // WEBSITE_URL
          return WEBSITE_URL;
        case 5: // LOGO_URL
          return LOGO_URL;
        case 6: // MERCHANT_IMAGE_URL
          return MERCHANT_IMAGE_URL;
        case 7: // PHONE
          return PHONE;
        case 8: // LOCATION
          return LOCATION;
        case 9: // ADDRESS
          return ADDRESS;
        case 10: // DISTANCE_IN_METERS
          return DISTANCE_IN_METERS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __LOCATIONID_ISSET_ID = 0;
  private static final int __DISTANCEINMETERS_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.LOCATION_ID,_Fields.NAME,_Fields.EMAIL,_Fields.WEBSITE_URL,_Fields.LOGO_URL,_Fields.MERCHANT_IMAGE_URL,_Fields.PHONE,_Fields.LOCATION,_Fields.DISTANCE_IN_METERS};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.LOCATION_ID, new org.apache.thrift.meta_data.FieldMetaData("locationId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WEBSITE_URL, new org.apache.thrift.meta_data.FieldMetaData("websiteUrl", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOGO_URL, new org.apache.thrift.meta_data.FieldMetaData("logoUrl", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_IMAGE_URL, new org.apache.thrift.meta_data.FieldMetaData("merchantImageUrl", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOCATION, new org.apache.thrift.meta_data.FieldMetaData("location", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Location_t.class)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Address_t.class)));
    tmpMap.put(_Fields.DISTANCE_IN_METERS, new org.apache.thrift.meta_data.FieldMetaData("distanceInMeters", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MerchantLocation_t.class, metaDataMap);
  }

  public MerchantLocation_t() {
  }

  public MerchantLocation_t(
    Address_t address)
  {
    this();
    this.address = address;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MerchantLocation_t(MerchantLocation_t other) {
    __isset_bitfield = other.__isset_bitfield;
    this.locationId = other.locationId;
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    if (other.isSetWebsiteUrl()) {
      this.websiteUrl = other.websiteUrl;
    }
    if (other.isSetLogoUrl()) {
      this.logoUrl = other.logoUrl;
    }
    if (other.isSetMerchantImageUrl()) {
      this.merchantImageUrl = other.merchantImageUrl;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetLocation()) {
      this.location = new Location_t(other.location);
    }
    if (other.isSetAddress()) {
      this.address = new Address_t(other.address);
    }
    this.distanceInMeters = other.distanceInMeters;
  }

  public MerchantLocation_t deepCopy() {
    return new MerchantLocation_t(this);
  }

  public void clear() {
    setLocationIdIsSet(false);
    this.locationId = 0;
    this.name = null;
    this.email = null;
    this.websiteUrl = null;
    this.logoUrl = null;
    this.merchantImageUrl = null;
    this.phone = null;
    this.location = null;
    this.address = null;
    setDistanceInMetersIsSet(false);
    this.distanceInMeters = 0.0;
  }

  public long getLocationId() {
    return this.locationId;
  }

  public MerchantLocation_t setLocationId(long locationId) {
    this.locationId = locationId;
    setLocationIdIsSet(true);
    return this;
  }

  public void unsetLocationId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOCATIONID_ISSET_ID);
  }

  /** Returns true if field locationId is set (has been assigned a value) and false otherwise */
  public boolean isSetLocationId() {
    return EncodingUtils.testBit(__isset_bitfield, __LOCATIONID_ISSET_ID);
  }

  public void setLocationIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOCATIONID_ISSET_ID, value);
  }

  public String getName() {
    return this.name;
  }

  public MerchantLocation_t setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public String getEmail() {
    return this.email;
  }

  public MerchantLocation_t setEmail(String email) {
    this.email = email;
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public String getWebsiteUrl() {
    return this.websiteUrl;
  }

  public MerchantLocation_t setWebsiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
    return this;
  }

  public void unsetWebsiteUrl() {
    this.websiteUrl = null;
  }

  /** Returns true if field websiteUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetWebsiteUrl() {
    return this.websiteUrl != null;
  }

  public void setWebsiteUrlIsSet(boolean value) {
    if (!value) {
      this.websiteUrl = null;
    }
  }

  public String getLogoUrl() {
    return this.logoUrl;
  }

  public MerchantLocation_t setLogoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
    return this;
  }

  public void unsetLogoUrl() {
    this.logoUrl = null;
  }

  /** Returns true if field logoUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetLogoUrl() {
    return this.logoUrl != null;
  }

  public void setLogoUrlIsSet(boolean value) {
    if (!value) {
      this.logoUrl = null;
    }
  }

  public String getMerchantImageUrl() {
    return this.merchantImageUrl;
  }

  public MerchantLocation_t setMerchantImageUrl(String merchantImageUrl) {
    this.merchantImageUrl = merchantImageUrl;
    return this;
  }

  public void unsetMerchantImageUrl() {
    this.merchantImageUrl = null;
  }

  /** Returns true if field merchantImageUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantImageUrl() {
    return this.merchantImageUrl != null;
  }

  public void setMerchantImageUrlIsSet(boolean value) {
    if (!value) {
      this.merchantImageUrl = null;
    }
  }

  public String getPhone() {
    return this.phone;
  }

  public MerchantLocation_t setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  public Location_t getLocation() {
    return this.location;
  }

  public MerchantLocation_t setLocation(Location_t location) {
    this.location = location;
    return this;
  }

  public void unsetLocation() {
    this.location = null;
  }

  /** Returns true if field location is set (has been assigned a value) and false otherwise */
  public boolean isSetLocation() {
    return this.location != null;
  }

  public void setLocationIsSet(boolean value) {
    if (!value) {
      this.location = null;
    }
  }

  public Address_t getAddress() {
    return this.address;
  }

  public MerchantLocation_t setAddress(Address_t address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  public double getDistanceInMeters() {
    return this.distanceInMeters;
  }

  public MerchantLocation_t setDistanceInMeters(double distanceInMeters) {
    this.distanceInMeters = distanceInMeters;
    setDistanceInMetersIsSet(true);
    return this;
  }

  public void unsetDistanceInMeters() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DISTANCEINMETERS_ISSET_ID);
  }

  /** Returns true if field distanceInMeters is set (has been assigned a value) and false otherwise */
  public boolean isSetDistanceInMeters() {
    return EncodingUtils.testBit(__isset_bitfield, __DISTANCEINMETERS_ISSET_ID);
  }

  public void setDistanceInMetersIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DISTANCEINMETERS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case LOCATION_ID:
      if (value == null) {
        unsetLocationId();
      } else {
        setLocationId((Long)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((String)value);
      }
      break;

    case WEBSITE_URL:
      if (value == null) {
        unsetWebsiteUrl();
      } else {
        setWebsiteUrl((String)value);
      }
      break;

    case LOGO_URL:
      if (value == null) {
        unsetLogoUrl();
      } else {
        setLogoUrl((String)value);
      }
      break;

    case MERCHANT_IMAGE_URL:
      if (value == null) {
        unsetMerchantImageUrl();
      } else {
        setMerchantImageUrl((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case LOCATION:
      if (value == null) {
        unsetLocation();
      } else {
        setLocation((Location_t)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((Address_t)value);
      }
      break;

    case DISTANCE_IN_METERS:
      if (value == null) {
        unsetDistanceInMeters();
      } else {
        setDistanceInMeters((Double)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case LOCATION_ID:
      return Long.valueOf(getLocationId());

    case NAME:
      return getName();

    case EMAIL:
      return getEmail();

    case WEBSITE_URL:
      return getWebsiteUrl();

    case LOGO_URL:
      return getLogoUrl();

    case MERCHANT_IMAGE_URL:
      return getMerchantImageUrl();

    case PHONE:
      return getPhone();

    case LOCATION:
      return getLocation();

    case ADDRESS:
      return getAddress();

    case DISTANCE_IN_METERS:
      return Double.valueOf(getDistanceInMeters());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case LOCATION_ID:
      return isSetLocationId();
    case NAME:
      return isSetName();
    case EMAIL:
      return isSetEmail();
    case WEBSITE_URL:
      return isSetWebsiteUrl();
    case LOGO_URL:
      return isSetLogoUrl();
    case MERCHANT_IMAGE_URL:
      return isSetMerchantImageUrl();
    case PHONE:
      return isSetPhone();
    case LOCATION:
      return isSetLocation();
    case ADDRESS:
      return isSetAddress();
    case DISTANCE_IN_METERS:
      return isSetDistanceInMeters();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MerchantLocation_t)
      return this.equals((MerchantLocation_t)that);
    return false;
  }

  public boolean equals(MerchantLocation_t that) {
    if (that == null)
      return false;

    boolean this_present_locationId = true && this.isSetLocationId();
    boolean that_present_locationId = true && that.isSetLocationId();
    if (this_present_locationId || that_present_locationId) {
      if (!(this_present_locationId && that_present_locationId))
        return false;
      if (this.locationId != that.locationId)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_websiteUrl = true && this.isSetWebsiteUrl();
    boolean that_present_websiteUrl = true && that.isSetWebsiteUrl();
    if (this_present_websiteUrl || that_present_websiteUrl) {
      if (!(this_present_websiteUrl && that_present_websiteUrl))
        return false;
      if (!this.websiteUrl.equals(that.websiteUrl))
        return false;
    }

    boolean this_present_logoUrl = true && this.isSetLogoUrl();
    boolean that_present_logoUrl = true && that.isSetLogoUrl();
    if (this_present_logoUrl || that_present_logoUrl) {
      if (!(this_present_logoUrl && that_present_logoUrl))
        return false;
      if (!this.logoUrl.equals(that.logoUrl))
        return false;
    }

    boolean this_present_merchantImageUrl = true && this.isSetMerchantImageUrl();
    boolean that_present_merchantImageUrl = true && that.isSetMerchantImageUrl();
    if (this_present_merchantImageUrl || that_present_merchantImageUrl) {
      if (!(this_present_merchantImageUrl && that_present_merchantImageUrl))
        return false;
      if (!this.merchantImageUrl.equals(that.merchantImageUrl))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_location = true && this.isSetLocation();
    boolean that_present_location = true && that.isSetLocation();
    if (this_present_location || that_present_location) {
      if (!(this_present_location && that_present_location))
        return false;
      if (!this.location.equals(that.location))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_distanceInMeters = true && this.isSetDistanceInMeters();
    boolean that_present_distanceInMeters = true && that.isSetDistanceInMeters();
    if (this_present_distanceInMeters || that_present_distanceInMeters) {
      if (!(this_present_distanceInMeters && that_present_distanceInMeters))
        return false;
      if (this.distanceInMeters != that.distanceInMeters)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(MerchantLocation_t other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    MerchantLocation_t typedOther = (MerchantLocation_t)other;

    lastComparison = Boolean.valueOf(isSetLocationId()).compareTo(typedOther.isSetLocationId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocationId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.locationId, typedOther.locationId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(typedOther.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, typedOther.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmail()).compareTo(typedOther.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, typedOther.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWebsiteUrl()).compareTo(typedOther.isSetWebsiteUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWebsiteUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.websiteUrl, typedOther.websiteUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLogoUrl()).compareTo(typedOther.isSetLogoUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLogoUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.logoUrl, typedOther.logoUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantImageUrl()).compareTo(typedOther.isSetMerchantImageUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantImageUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantImageUrl, typedOther.merchantImageUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(typedOther.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, typedOther.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLocation()).compareTo(typedOther.isSetLocation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.location, typedOther.location);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(typedOther.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, typedOther.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDistanceInMeters()).compareTo(typedOther.isSetDistanceInMeters());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDistanceInMeters()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.distanceInMeters, typedOther.distanceInMeters);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MerchantLocation_t(");
    boolean first = true;

    if (isSetLocationId()) {
      sb.append("locationId:");
      sb.append(this.locationId);
      first = false;
    }
    if (isSetName()) {
      if (!first) sb.append(", ");
      sb.append("name:");
      if (this.name == null) {
        sb.append("null");
      } else {
        sb.append(this.name);
      }
      first = false;
    }
    if (isSetEmail()) {
      if (!first) sb.append(", ");
      sb.append("email:");
      if (this.email == null) {
        sb.append("null");
      } else {
        sb.append(this.email);
      }
      first = false;
    }
    if (isSetWebsiteUrl()) {
      if (!first) sb.append(", ");
      sb.append("websiteUrl:");
      if (this.websiteUrl == null) {
        sb.append("null");
      } else {
        sb.append(this.websiteUrl);
      }
      first = false;
    }
    if (isSetLogoUrl()) {
      if (!first) sb.append(", ");
      sb.append("logoUrl:");
      if (this.logoUrl == null) {
        sb.append("null");
      } else {
        sb.append(this.logoUrl);
      }
      first = false;
    }
    if (isSetMerchantImageUrl()) {
      if (!first) sb.append(", ");
      sb.append("merchantImageUrl:");
      if (this.merchantImageUrl == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantImageUrl);
      }
      first = false;
    }
    if (isSetPhone()) {
      if (!first) sb.append(", ");
      sb.append("phone:");
      if (this.phone == null) {
        sb.append("null");
      } else {
        sb.append(this.phone);
      }
      first = false;
    }
    if (isSetLocation()) {
      if (!first) sb.append(", ");
      sb.append("location:");
      if (this.location == null) {
        sb.append("null");
      } else {
        sb.append(this.location);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("address:");
    if (this.address == null) {
      sb.append("null");
    } else {
      sb.append(this.address);
    }
    first = false;
    if (isSetDistanceInMeters()) {
      if (!first) sb.append(", ");
      sb.append("distanceInMeters:");
      sb.append(this.distanceInMeters);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (address == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'address' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
    if (location != null) {
      location.validate();
    }
    if (address != null) {
      address.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te.getMessage());
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te.getMessage());
    }
  }

  private static class MerchantLocation_tStandardSchemeFactory implements SchemeFactory {
    public MerchantLocation_tStandardScheme getScheme() {
      return new MerchantLocation_tStandardScheme();
    }
  }

  private static class MerchantLocation_tStandardScheme extends StandardScheme<MerchantLocation_t> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MerchantLocation_t struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // LOCATION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.locationId = iprot.readI64();
              struct.setLocationIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // WEBSITE_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.websiteUrl = iprot.readString();
              struct.setWebsiteUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // LOGO_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.logoUrl = iprot.readString();
              struct.setLogoUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MERCHANT_IMAGE_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantImageUrl = iprot.readString();
              struct.setMerchantImageUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // LOCATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.location = new Location_t();
              struct.location.read(iprot);
              struct.setLocationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.address = new Address_t();
              struct.address.read(iprot);
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // DISTANCE_IN_METERS
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.distanceInMeters = iprot.readDouble();
              struct.setDistanceInMetersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MerchantLocation_t struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetLocationId()) {
        oprot.writeFieldBegin(LOCATION_ID_FIELD_DESC);
        oprot.writeI64(struct.locationId);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        if (struct.isSetName()) {
          oprot.writeFieldBegin(NAME_FIELD_DESC);
          oprot.writeString(struct.name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.email != null) {
        if (struct.isSetEmail()) {
          oprot.writeFieldBegin(EMAIL_FIELD_DESC);
          oprot.writeString(struct.email);
          oprot.writeFieldEnd();
        }
      }
      if (struct.websiteUrl != null) {
        if (struct.isSetWebsiteUrl()) {
          oprot.writeFieldBegin(WEBSITE_URL_FIELD_DESC);
          oprot.writeString(struct.websiteUrl);
          oprot.writeFieldEnd();
        }
      }
      if (struct.logoUrl != null) {
        if (struct.isSetLogoUrl()) {
          oprot.writeFieldBegin(LOGO_URL_FIELD_DESC);
          oprot.writeString(struct.logoUrl);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantImageUrl != null) {
        if (struct.isSetMerchantImageUrl()) {
          oprot.writeFieldBegin(MERCHANT_IMAGE_URL_FIELD_DESC);
          oprot.writeString(struct.merchantImageUrl);
          oprot.writeFieldEnd();
        }
      }
      if (struct.phone != null) {
        if (struct.isSetPhone()) {
          oprot.writeFieldBegin(PHONE_FIELD_DESC);
          oprot.writeString(struct.phone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.location != null) {
        if (struct.isSetLocation()) {
          oprot.writeFieldBegin(LOCATION_FIELD_DESC);
          struct.location.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.address != null) {
        oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
        struct.address.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDistanceInMeters()) {
        oprot.writeFieldBegin(DISTANCE_IN_METERS_FIELD_DESC);
        oprot.writeDouble(struct.distanceInMeters);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MerchantLocation_tTupleSchemeFactory implements SchemeFactory {
    public MerchantLocation_tTupleScheme getScheme() {
      return new MerchantLocation_tTupleScheme();
    }
  }

  private static class MerchantLocation_tTupleScheme extends TupleScheme<MerchantLocation_t> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MerchantLocation_t struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      struct.address.write(oprot);
      BitSet optionals = new BitSet();
      if (struct.isSetLocationId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetEmail()) {
        optionals.set(2);
      }
      if (struct.isSetWebsiteUrl()) {
        optionals.set(3);
      }
      if (struct.isSetLogoUrl()) {
        optionals.set(4);
      }
      if (struct.isSetMerchantImageUrl()) {
        optionals.set(5);
      }
      if (struct.isSetPhone()) {
        optionals.set(6);
      }
      if (struct.isSetLocation()) {
        optionals.set(7);
      }
      if (struct.isSetDistanceInMeters()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetLocationId()) {
        oprot.writeI64(struct.locationId);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
      if (struct.isSetWebsiteUrl()) {
        oprot.writeString(struct.websiteUrl);
      }
      if (struct.isSetLogoUrl()) {
        oprot.writeString(struct.logoUrl);
      }
      if (struct.isSetMerchantImageUrl()) {
        oprot.writeString(struct.merchantImageUrl);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetLocation()) {
        struct.location.write(oprot);
      }
      if (struct.isSetDistanceInMeters()) {
        oprot.writeDouble(struct.distanceInMeters);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MerchantLocation_t struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.address = new Address_t();
      struct.address.read(iprot);
      struct.setAddressIsSet(true);
      BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        struct.locationId = iprot.readI64();
        struct.setLocationIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
      if (incoming.get(3)) {
        struct.websiteUrl = iprot.readString();
        struct.setWebsiteUrlIsSet(true);
      }
      if (incoming.get(4)) {
        struct.logoUrl = iprot.readString();
        struct.setLogoUrlIsSet(true);
      }
      if (incoming.get(5)) {
        struct.merchantImageUrl = iprot.readString();
        struct.setMerchantImageUrlIsSet(true);
      }
      if (incoming.get(6)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(7)) {
        struct.location = new Location_t();
        struct.location.read(iprot);
        struct.setLocationIsSet(true);
      }
      if (incoming.get(8)) {
        struct.distanceInMeters = iprot.readDouble();
        struct.setDistanceInMetersIsSet(true);
      }
    }
  }

}

